{"id":"ejercicios/this.html","dependencies":[{"name":"D:\\Utilities\\E-Learning\\Platzi\\Cursos\\Curso_Profesional_de_Javascript\\package.json","includedInParent":true,"mtime":1617058140963}],"generated":{"html":"<html>\n  <head>\n    <title>this</title>\n  </head>\n\n  <body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <p><em>Abre la consola</em></p>\n\n    <h1>\n      <code>this</code> se refiere a un objeto. Ese objeto es el que actualmente\n      está ejecutando un pedazo de código.\n    </h1>\n\n    <script>// this en el scope global\nconsole.log(`this: ${this}`); // this en el scope de una función\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(`whoIsThis(): ${whoIsThis()}`); // this en el scope de una función en strict mode\n\nfunction whoIsThisStrict() {\n  'use strict';\n\n  return this;\n}\n\nconsole.log(`whoIsThisStrict(): ${whoIsThisStrict()}`); // this en el contexto de un objeto\n\nconst person = {\n  name: 'Gabriel',\n  saludar: function () {\n    console.log(`Hola soy ${this.name}`);\n  }\n};\nperson.saludar(); // this cuando sacamos a una función de un objeto\n\nconst accion = person.saludar;\naccion(); // this en el contexto de una \"clase\"\n\nfunction Carro(marca, modelo) {\n  this.marca = marca;\n  this.modelo = modelo;\n}\n\nCarro.prototype.decirMarca = function () {\n  console.log(`Mi marca es: ${this.marca}`);\n};\n\nCarro.prototype.decirModelo = function () {\n  console.log(`Mi modelo es: ${this.modelo}`);\n};\n\nconst chevrolet = new Carro('Chevrolet-Sprint', '1995');\nchevrolet.decirMarca();\nchevrolet.decirModelo();</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"94c94143f8f1e05aaac584a5ec9bdf49","cacheData":{"env":{}}}